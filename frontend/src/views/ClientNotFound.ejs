<%- include('../public/partials/Header.ejs'); %>
<style>
  

</style>
<body>

<%- include('../public/partials/Sidebar.ejs'); %>
    

    <div class = "mainAreaGeneral">  <br><br>


        <div class="form-inline">
            <div class = "col col-12">
              <h2 style="float: left;"> Clientes cadastrados <i style="font-family: Roboto; color: rgba(0, 0, 0, 0.219); font-size: 20px">(<%= size.length %>)</i></h2> <br><br>
           
        
    
            </div> 
    
           
            <div class = "col col-12">
              <button class = "btn btn-primary" type = "button" onclick = "openModal()" style="float: left; width: 160px;" > Novo cliente <svg width="2em" height="2em" viewBox="0 0 16 16" class="bi bi-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
              </svg></button>
    
              
              <button class="btn btn-outline-success my-2 my-sm-0" type="button" style="float: right;" onclick="searchByCPF()" >Buscar</button>
              <input class="form-control mr-sm-2" style="float: right;" id = "productToSearch" type="text" maxlength="11" autocomplete="off" placeholder="Buscar cliente pelo CPF" aria-label="Search">
           
               
              
            </div>      <button onclick = "backProducts()" class = "btn btn-outline-primary" style="font-size: 20px; font-weight: light; margin-left: -92.5%"> Voltar </button>
          </div> <br>

          <table class="table table-striped" style="text-align: center;">
      <thead style="font-family: Roboto light;" class="thead-info">

      <tr>
        <th scope="col">Nome completo</th>
        <th scope="col">Email</th>
        <th scope="col">CPF</th>
        <th scope="col">Ação</th>
      </tr>
      </thead>

      <tbody>
      
  </tbody>
</table>



<div class="alert alert-danger" role="alert">
    <h4 style="text-align: left">Atenção</h4> <hr>
    <p style = "text-align: left">Não há nenhum cliente cadastrado com o CPF <i style="font-style: normal; font-weight: bold;"><%= cpf %></i>, verifique sua busca e tente novamente. </p>
  </div>

  <button onclick = "backProducts()" class = "btn btn-outline-primary" style="font-size: 20px; font-weight: light; margin-left: -92.5%"> Voltar </button>

    </div>


    

    
</body>


<%- include('../public/partials/Footer.ejs') %>
<%- include('../public/partials/newClient.ejs') %>
<%- include('../public/partials/deleteClientModal.ejs') %>

<script>

function backProducts(){
      window.location.href = `http://localhost:3000/clientes`;
    }

  function searchByCPF(){
    const cpf = $('#productToSearch').val();
    window.location.href = `http://localhost:3000/clientes/${cpf}`;
  }

  function openModal(){
    $('#myModal').modal('show');
}


function verifyDeletion(event, form){
    event.preventDefault();
    $('#myDeleteModal').modal('show');

    var deleteBtn = document.getElementById('delete');
  
    deleteBtn.addEventListener('click', () => {
      form.submit();
    })

  }

  function verifyUpdating(identifier){     
  
  const cpf = $(identifier).data('updateid');
  axios.get(`http://localhost:8080/clients/${cpf}`).then((product) => {

  var data = product.data;

    $("body").append(`<div class="modal fade" id="updateModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered">
<div class="modal-content">
  <div class="modal-header">
    <h5 class="modal-title" id="staticBackdropLabel">Editar cliente</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div> 
  <div class="modal-body">
    <form action="/update/client" method="POST">
      <label for="fullName" style: "color: #f5f5f5">Nome completo</label>
      <input class = "form-control" required type="text" value = "${data.fullName}" name="fullName" id="fullName" placeholder="Digite o nome aqui" > <br>
      <label for="email" style: "color: #f5f5f5">Email</label>
      <input class = "form-control"required  value = "${data.email}"  type="text" name="email" id="email" placeholder="Digite o email aqui">
      <input class = "form-control" required  value = "${data.cpf}"  style="margin-top: 10px" hidden type="text" name="cpf" id="cpf" placeholder="Categoria">
      <input class = "form-control" required value = "${data.companyId}" style="margin-top: 10px" hidden type="number" name="companyId" id="companyId" value = "<%= fixedCompanyId %>" >
      <div class="modal-footer"> <br>
        <br><br>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" id = "cancelUpdate">Cancelar</button>
        <button type="submit" class="btn btn-warning" id = "finishUpdate">Atualizar cliente</button>
      </div>
    </form>
  </div>
  
</div>
</div>
</div>`);
   
    $('#updateModal').modal('show');

    var btnCancelUpdate = document.getElementById('cancelUpdate');
    btnCancelUpdate.addEventListener('click', () => {

      var info = document.getElementById("updateModal");
      if (info.parentNode) {
      info.parentNode.removeChild(info);
      }

    })

    var buttonUpdate = document.getElementById('finishUpdate');

    // buttonUpdate.addEventListener('click', () => {
    //   const fullName = $('#fullName').val();
    //   const email = $('#email').val();
    //   const cpf = $('#cpf').val();
    //   const companyId = $('#newcompanyId').val();
    //   console.log(email, fullName, cpf, companyId);

    //   axios.put(`http://localhost:8080/clients`, {

    //     fullName: fullName,
    //     email: email,
    //     cpf: cpf,
    //     companyId: data.companyId

    //   }).then(() => {
    //     location.reload();
    //   }).catch((err) => {
    //     console.log(err);
    //   })

    // })

  }).catch((err) => {
    console.log(err);
  })

}



</script>


<script>
    // Restricts input for the given textbox to the given inputFilter.
    function setInputFilter(textbox, inputFilter) {
  ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
    textbox.addEventListener(event, function() {
      if (inputFilter(this.value)) {
        this.oldValue = this.value;
        this.oldSelectionStart = this.selectionStart;
        this.oldSelectionEnd = this.selectionEnd;
      } else if (this.hasOwnProperty("oldValue")) {
        this.value = this.oldValue;
        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
      } else {
        this.value = "";
      }
    });
  });
}


setInputFilter(document.getElementById("productToSearch"), function(value) {
  return /^\d*$/.test(value); });

setInputFilter(document.getElementById("cpf"), function(value) {
return /^\d*$/.test(value); });


</script>